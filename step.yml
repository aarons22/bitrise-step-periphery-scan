#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  Periphery Scan
summary: |
  A tool to identify unused code in Swift projects.
description: |
  Uses Periphery to scan for unused code
website: https://github.com/aarons22/bitrise-step-periphery-scan
source_code_url: https://github.com/aarons22/bitrise-step-periphery-scan
support_url: https://github.com/aarons22/bitrise-step-periphery-scan/issues
host_os_tags:
  - osx-10.10
  - ubuntu-16.04
project_type_tags:
  - ios
type_tags:
  - utility
is_requires_admin_user: true
is_always_run: false
is_skippable: false
run_if: ""

deps:
  brew:
  - name: peripheryapp/periphery/periphery

toolkit:
  bash:
    entry_file: step.sh

inputs:
  - path_to_project: $BITRISE_SOURCE_DIR
    opts:
      title: "Path to project folder"
      summary: ""
      is_required: true

  - skip_build: "false"
    opts:
      title: "Skip build"
      summary: "Skip the project build step"
      description: |
        Skip the project build step.

        If enabled the `--skip-build` flag will be appended to all Periphery commands.
      value_options:
      - "true"
      - "false"
  
  - index_store_path:
    opts:
      title: "Index Store Path"
      summary: "Path to index store to use. Implies 'skip_build: true'"

  - clean_build: "false"
    opts:
      title: "Clean build"
      summary: "Clean existing build artifacts before building"
      description: |
        Clean existing build artifacts before building.
        If enabled the `--clean-build` flag will be appended to all Periphery commands.
      value_options:
      - "true"
      - "false"

  - xcode_project:
    opts:
      title: "Project path"
      summary: "Path to your project's .xcodeproj - supply this option if your project doesn't have an .xcworkspace"

  - xcode_workspace:
    opts:
      title: "Workspace path"
      summary: "Path to your project's .xcworkspace"

  - schemes:
    opts:
      title: "Schemes"
      summary: "Comma-separated list of schemes that must be built in order to produce the targets passed to the --targets option."

  - targets:
    opts:
      title: "Targets"
      summary: "Comma-separated list of target names to scan."

  - report_file: "periphery_report"
    opts:
      title: "The report file name, without extension."
      summary: "The report file name, without extension."
      description: |-
        This will be used as a report file name. Please don't put the extension here. The extension will be determined depending on the reporter that you choose. The default is `periphery_report`.
      is_required: true

outputs:
  - PERIPHERY_REPORT: null
    opts:
      title: "A Periphery report"
      summary: The generated Periphery report. May be empty if the Periphery succeeded with 0 errors or warnings. This is useful when you want to pass it somewhere else, for example on a Slack channel.
      description: The generated Periphery report. May be empty if the Periphery succeeded with 0 errors or warnings. This is useful when you want to pass it somewhere else, for example on a Slack channel.
      is_dont_change_value: true
  - PERIPHERY_REPORT_PATH: null
    opts:
      title: "A Periphery report path"
      summary: The path to the generated Periphery report (by default, it is created by concatenating the `$BITRISE_DEPLOY_DIR` with the `report_file` you provide as one of the inputs to this step.
      description: The path to the generated Periphery report (by default, it is created by concatenating the `$BITRISE_DEPLOY_DIR` with the `report_file` you provide as one of the inputs to this step.
      is_dont_change_value: true
